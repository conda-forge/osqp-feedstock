From db3bee7ddc86f91bd189948fe77b2fe4a2c8e080 Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Fri, 26 May 2023 21:46:48 +1100
Subject: [PATCH 3/3] disable codegen; ABI is not compatible
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Co-Authored-By: Sebastian PÃ¶lsterl <sebp@k-d-w.org>
---
 src/osqp/interface.py | 61 +++++--------------------------------------
 1 file changed, 6 insertions(+), 55 deletions(-)

diff --git a/src/osqp/interface.py b/src/osqp/interface.py
index 67b659a..d04db56 100644
--- a/src/osqp/interface.py
+++ b/src/osqp/interface.py
@@ -460,61 +460,12 @@ class OSQP:
         prefix='',
         compile=False,
     ):
-        assert self.has_capability('OSQP_CAPABILITY_CODEGEN'), 'This OSQP object does not support codegen'
-        assert parameters in (
-            'vectors',
-            'matrices',
-        ), 'Unknown parameters specification'
-
-        defines = self.ext.OSQPCodegenDefines()
-        self.ext.osqp_set_default_codegen_defines(defines)
-
-        defines.embedded_mode = 1 if parameters == 'vectors' else 2
-        defines.float_type = 1 if use_float else 0
-        defines.printing_enable = 1 if printing_enable else 0
-        defines.profiling_enable = 1 if profiling_enable else 0
-        defines.interrupt_enable = 1 if interrupt_enable else 0
-        defines.derivatives_enable = 0
-
-        folder = os.path.abspath(folder)
-        if include_codegen_src:
-            # https://github.com/python/importlib_resources/issues/85
-            try:
-                codegen_src_path = importlib.resources.files('osqp.codegen').joinpath('codegen_src')
-                shutil.copytree(codegen_src_path, folder, dirs_exist_ok=force_rewrite)
-            except AttributeError:
-                handle = importlib.resources.path('osqp.codegen', 'codegen_src')
-                with handle as codegen_src_path:
-                    shutil.copytree(codegen_src_path, folder, dirs_exist_ok=force_rewrite)
-
-        # The C codegen call expects the folder to exist and have a trailing slash
-        os.makedirs(folder, exist_ok=True)
-        if not folder.endswith(os.path.sep):
-            folder += os.path.sep
-
-        status = self._solver.codegen(folder, prefix, defines)
-        assert status == 0, f'Codegen failed with error code {status}'
-
-        if extension_name is not None:
-            assert include_codegen_src, 'If generating python wrappers, include_codegen_src must be True'
-            template_vars = dict(
-                prefix=prefix,
-                extension_name=extension_name,
-                embedded_mode=defines.embedded_mode,
-            )
-            self._render_pywrapper_files(folder, **template_vars)
-            if compile:
-                subprocess.check_call(
-                    [
-                        sys.executable,
-                        'setup.py',
-                        'build_ext',
-                        '--inplace',
-                    ],
-                    cwd=folder,
-                )
-
-        return folder
+        warnings.warn(
+            "conda-forge builds of osqp are built on shared libraries; "
+            "by the design of osqp, these have a different Application "
+            "Binary Interface (ABI) than those required for codegen, "
+            "and this is therefore not supported."
+        )
 
     def adjoint_derivative_compute(self, dx=None, dy=None):
         """
-- 
2.50.1 (Apple Git-155)

